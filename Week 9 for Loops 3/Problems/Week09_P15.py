##################################################
# sample solution 1: for all + variant of for some
##################################################
def dominate(p, P):  # for all pattern
    n = len(P)
    for i in range(n):
        q = P[i]
        if not (q[0] <= p[0] and q[1] <= p[1]):
            return False
    return True
            
def dominant(P):
    n = len(P)
    for i in range(n):
        if dominate(P[i], P):
            return P[i]
    return 0

##################################################
# sample solution 2: min/max + variant of for some
##################################################
def dominant(P):
    n = len(P)

    max_x = P[0][0]
    for i in range(n):
        if max_x < P[i][0]:
            max_x = P[i][0]
    
    max_y = P[0][1]
    for i in range(n):
        if max_y < P[i][1]:
            max_y = P[i][1]

    for i in range(n):
        if P[i][0] == max_x and P[i][1] == max_y:
            return P[i]
    return 0

    
print(dominant([[7,5],[-2,-5],[0,-2],[9,10],[0,2], \
                [9,0],[-5,5],[2,-5],[9,9],[7,8]]))      # [9, 10]
print(dominant([[-8,7],[6,-5],[0,-1],[3,6],[-9,-10], \
                [7,-1],[6,-10],[-1,5],[-6,9],[8,-10]])) # 0
print(dominant([[-16,3],[-8,6],[8,-27],[-30,21],[-15,-16],[30,-2],[21,-1], \
                [8,-21],[8,22],[1,15],[10,-27],[16,6],[-12,-29],[22,-2], \
                [13,23],[13,26],[-6,18],[-3,27],[23,-25],[-22,-17]])) # 0
print(dominant([[-2,-8],[-22,22],[-30,0],[24,-26],[3,7],[-28,-7],[12,-3], \
                [14,-21],[-16,-24],[0,26],[6,17],[-7,15],[-24,-13],[11,14], \
                [-5,-25],[-14,-18],[-13,19],[-18,24],[23,-27],[-7,-1]])) # 0
print(dominant([[18,20],[-1,-15],[-30,10],[-2,16],[-8,16],[-14,18],[14,-5], \
                [2,11],[-19,3],[19,-14],[19,11],[21,-10],[-25,18],[19,-3], \
                [-25,-18],[8,-13],[28,5],[-18,9],[-9,26],[25,1]])) # 0
